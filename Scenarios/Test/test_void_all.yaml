---
# ######################################### Basic Parameters #######################################

# Scale factor
scale_factor: 0.5

# Profiler
profile: False
pstats_records: 100

# Random seeds for each region
random_seed: 1

# Enable or disable the use of parallel processing. Note that the number of jobs is automatically
# reset according to the number of regions and population ratio between regions:
enable_parallel: True
num_jobs: -2

# ######################################### Clock ##################################################

# Time length of each tick in the simulation. The day length (86400) should be divisible by the
# following tick length:
tick_length_s: 600
# How long the simulation should run for, in days. Note the number of iterations will be computed
# from the tick length above:
simulation_length_days: 100
# the date at which the simulation starts:
epoch: 23rd February 2020

# ######################################### World ##################################################

world_factory:
  __type__: control_world_factory.ControlWorldFactory
  random_seed: 1
  # The time discretization (should match with tick_length_s)
  ticks_in_day_world: 144
  # The order in which the region names are listed here determines the index of that region referred
  # to in vectors and matrices appearing in other components:
  region_names: ["Test Region 0", "Test Region 1", "Test Region 2", "Test Region 3"]
  # Locations
  location_type_counts: {"House": 2500, "Hospital": 2, "Cemetery": 1, "Other_Location": 2497}
  # Agents
  number_of_agents_per_region: 100000
  max_age: 100
  # Activities
  activities: ["Home_Activity", "Other_Activity"]
  activity_location_types: {"Home_Activity": ["House"], "Other_Activity": [Other_Location]}
  number_of_locations_for_agent_by_activity: {"Home_Activity": 1, "Other_Activity": 10}
  contacts: 5
  contact_hours: 8
  travel_prob_per_day: 0.0001

# ######################################### Seasonal Effects #######################################

seasonal_effects_model:
  __type__: void_seasonal_effects_model.VoidSeasonalEffectsModel
  # If the following is null, as opposed to a filepath, all multipliers are set equal to 1:

# ######################################### Health #################################################

health_model:
  __type__: void_health_model.VoidHealthModel

# ######################################### Movement ###############################################

movement_model:
  __type__: void_movement_model.VoidMovementModel

# ######################################### Hospitalization and Death ##############################

hospitalization_and_death_model:
  __type__: void_hospitalization_and_death_model.VoidHospitalizationAndDeathModel

# ######################################### Testing and Contact Tracing ############################

testing_and_contact_tracing_model:
  __type__: void_testing_and_contact_tracing_model.VoidTestingAndContactTracingModel

# ######################################### Vaccination ############################################

vaccination_model:
  __type__: void_vaccination_model.VoidVaccinationModel

# ######################################### Regional Mixing ########################################

travel_model:
  __type__: void_travel_model.VoidTravelModel

# ######################################### Policy Maker ###########################################

policy_maker_model:
  __type__: void_policy_maker_model.VoidPolicyMakerModel

# ######################################### Output #################################################

regions_omitted_from_death_counts: []
super_regions_omitted_from_deaths_counts: []
historical_data_filepath: null

# Output that should be rendered from the simulation:
reporters:
  cli.TimeReporter: {}
  csv.StrainCounts:
    filename: tests/strain_counts_test_void_all.csv
  # plot.PlotInfected:
  #   show: False
  #   savefig: True
  #   filename: /tmp/infected_test.png
  #   historical_data: null
  # pygame_shapes.PygameShapes:
  #   fullscreen: True
  #   font_size: 20
  #   max_norm_prev: 1.0
  #   refresh_rate: 60
  #   display_width: 1500
  #   display_height: 700
  #   points_per_polygon: 400
  #   cmap: "Oranges"

# ######################################### Logging ################################################

# Format is https://docs.python.org/3/library/logging.config.html#logging-config-dictschema
logging:
  version: 1
  disable_existing_loggers: False
  formatters:
    standard:
      # format: '%(asctime)s [%(levelname)s] %(name)s: %(message)s'
      format: '[%(levelname)s] %(name)s: %(message)s'
  handlers:
    default:
      level: INFO
      formatter: standard
      class: logging.StreamHandler
      stream: 'ext://sys.stdout'  # Default is stderr
  loggers:
    '':   # root logger
      handlers: ['default']
      level: INFO
      propagate: False
#    'my.packg':
#      handlers: ['default']
#      level: INFO
#      propagate: False
#    '__main__':
#        handlers': ['default']
#        level: DEBUG
#        propagate: False
