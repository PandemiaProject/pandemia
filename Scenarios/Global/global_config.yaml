---
# ######################################### Basic Parameters #######################################

# Scale factor
scale_factor: 0.000025

# Profiler
profile: False
pstats_records: 100

# Random seeds for each region
random_seed: 1

# Enable or disable the use of ctypes
enable_ctypes: True

# Enable or disable the use of parallel processing. Note that the number of jobs is automatically
# reset according to the number of regions and population ratio between regions:
enable_parallel: True
num_jobs: -2

# ######################################### Clock ##################################################

# Time length of each tick in the simulation. The day length (86400) should be divisible by the
# following tick length:
tick_length_s: 86400 # 3600 # 7200 # 10800 # 21600 # 43200 # 86400
# How long the simulation should run for, in days. Note the number of iterations will be computed
# from the tick length above:
simulation_length_days: 200 # 730
# the date at which the simulation starts:
epoch: 15th December 2019

# ######################################### World ##################################################

world_factory:
  __type__: global_world_factory.GlobalWorldFactory
  regions_shape_path: Scenarios/Global/data/CNTR_RG_60M_2020_4326.shp
  regions_data_path: Scenarios/Global/data/country_data.csv
  local_travel_prob_per_day: 0.0
  distance_threshold: 10
  airport_path: Scenarios/Global/data/Airports_2010.csv
  air_travel_path: Scenarios/Global/data/Prediction_Monthly.csv
  interpolation: 0.1 # Between 0 and 1, values larger than 0 boost international travel

# ######################################### Seasonal Effects #######################################

seasonal_effects_model:
  __type__: simple_seasonal_effects_model.SimpleSeasonalEffectsModel
  # If the following is null, as opposed to a filepath, all multipliers are set equal to 1:
  seasonal_multiplier_by_region_by_month: Scenarios/Global/data/country_data_seasonality.csv

# ######################################### Health #################################################

health_model:
  __type__: simple_health_model.SimpleHealthModel
  location_typ_multipliers: null
  facemask_transmission_multiplier: 1.0
  immunity_period_days: 30
  num_initial_infections_by_region_by_strain:
    'CN': [100000]
  mutation_matrix: [[1.0]]
  number_of_strains: 1
  preset_weights_by_age:
    0:  {preset_0: 1.00, preset_1: 0.00}
    65: {preset_0: 0.999, preset_1: 0.001}
    85: {preset_0: 0.99, preset_1: 0.01}
  health_presets:
    preset_0:
      0:
        rho_immunity_failure:
          [[[[-1, 15, 30, 120, 180], [[0.0], [0.0], [0.0], [0.0], [0.0]]]]]
        sigma_immunity_failure:
          [[[[-1, 15, 30, 120, 180], [1.0, 0.0, 0.25, 0.35, 0.75]]]]
        infectiousness:
          [[[-1, 0, 15], [0.0, 0.15, 0.0]]]
        disease:
          [[[-1, 0, 15], [0.0, 0.15, 0.0]]]
        strain:
          [[[-1, 0, 15], [-1, 0, -1]]]
    preset_1:
      0:
        rho_immunity_failure:
          [[[[-1, 15, 30, 120, 180], [[0.0], [0.0], [0.0], [0.0], [0.0]]]]]
        sigma_immunity_failure:
          [[[[-1, 15, 30, 120, 180], [1.0, 0.0, 0.25, 0.35, 0.75]]]]
        infectiousness:
          [[[-1, 0, 15], [0.0, 0.15, 0.0]]]
        disease:
          [[[-1, 0, 15], [0.0, 0.15, 1.0]]]
        strain:
          [[[-1, 0, 15], [-1, 0, -1]]]
  # Rescale by time and population in each location, deactivate by setting sir_rescaling = False. If
  # activated, can still deactivate age mixing by setting age_mixing_matrices = null
  sir_rescaling: True
  age_mixing_matrices: Scenarios/Global/data/age_mixing_matrices/
  age_group_interval: 5
  # Deactivate by setting auto_generate_presets = False
  auto_generate_presets: False
  beta: null # Units: days^{-1}
  gamma_inverse: null # Units: days
  disease_level: null
  max_dist_days: null # Maximum infectiousness period, curtailing the geometric distribution 

# ######################################### Movement ###############################################

movement_model:
  __type__: void_movement_model.VoidMovementModel

# ######################################### Hospitalization and Death ##############################

hospitalization_and_death_model:
  __type__: void_hospitalization_and_death_model.VoidHospitalizationAndDeathModel

# ######################################### Testing and Contact Tracing ############################

testing_and_contact_tracing_model:
  __type__: void_testing_and_contact_tracing_model.VoidTestingAndContactTracingModel

# ######################################### Vaccination ############################################

vaccination_model:
  __type__: void_vaccination_model.VoidVaccinationModel

# ######################################### Regional Mixing ########################################

regional_mixing_model:
  __type__: simple_regional_mixing_model.SimpleRegionalMixingModel
  border_closure_factor: 0.1
  travel_transmission_multiplier: 1.5

# ######################################### Input ##################################################

input_model:
  __type__: void_input_model.VoidInputModel
  # __type__: validation_input_model.ValidationInputModel

# ######################################### Output #################################################

regions_omitted_from_death_counts: ['CN']
historical_data_filepath: Scenarios/Global/data/WHO-COVID-19-global-data-totals.csv

# Output that should be rendered from the simulation:
reporters:
  cli.TimeReporter: {}
  # csv.StrainCounts:
  #   filename: /tmp/strain_counts.csv
  plot.PlotInfected:
    show: False
    savefig: True
    filename: /tmp/infected_43200_86400.png
    historical_data: null
  plot.PlotDeaths:
    show: False
    savefig: True
    daily_deaths_filename: /tmp/daily_deaths_43200_86400.png
    cumulative_deaths_filename: /tmp/cumulative_deaths_43200_86400.png
    historical_data: Scenarios/Global/data/WHO-COVID-19-global-data-totals.csv
  pygame_display.PygameDisplay:
    fullscreen: True
    font_size: 20
    max_norm_prev: 1.0
    refresh_rate: 60
    display_width: 1500
    display_height: 700
    points_per_polygon: 400
    cmap: "Oranges"

# ######################################### Logging ################################################

# Format is https://docs.python.org/3/library/logging.config.html#logging-config-dictschema
logging:
  version: 1
  disable_existing_loggers: False
  formatters:
    standard:
      # format: '%(asctime)s [%(levelname)s] %(name)s: %(message)s'
      format: '[%(levelname)s] %(name)s: %(message)s'
  handlers:
    default:
      level: INFO
      formatter: standard
      class: logging.StreamHandler
      stream: 'ext://sys.stdout'  # Default is stderr
  loggers:
    '':   # root logger
      handlers: ['default']
      level: INFO
      propagate: False
#    'my.packg':
#      handlers: ['default']
#      level: INFO
#      propagate: False
#    '__main__':
#        handlers': ['default']
#        level: DEBUG
#        propagate: False
